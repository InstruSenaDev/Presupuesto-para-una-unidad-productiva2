---
interface Props{
  titulo:string;
}

const {titulo} = Astro.props;
---

    <header
    class="text-3xl font-bold pl-16 bg-blueUwu flex justify-between items-center"
    >
    <h1 class="text-blanquito p-7 text-4xl">{titulo}</h1>
    <div class="p-9 flex justify-end text-blanquito font-bold">
        <h2> Luis</h2>
        <span class="pl-5 md:pl-3 lg:pl-2 xl:pl-1">
          <box-icon id="OPEN" class="cursor-pointer" name='down-arrow-square' type='solid' color='#ffffff' ></box-icon>
        </span>
    </div>
    </header>

    <!-- Modal -->
  <div id="MODAL" class=" fixed top-0 left-0 w-full h-full bg-gray-500 bg-opacity-50 flex justify-center items-center">
    <div class="bg-white p-4 rounded bg-blanquito h-auto w-2/6 flex-col text-center">
      <div>
        <h1>Perfil</h1> 
        <h2>Luis</h2>
        <h2>Luis</h2>
        <p>Modal content</p>
        <button id="CLOSE" class="bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded">Cerrar</button>
      </div>
    </div>
  </div>
  <script src="https://unpkg.com/boxicons@2.1.4/dist/boxicons.js"></script>
  <script>
    const openModal = document.getElementById('OPEN');
    const closeModal = document.getElementById('CLOSE');
    const modal = document.getElementById('MODAL');
  
    openModal.addEventListener('click', () => {
      modal.classList.remove('hidden');
    });
  
    closeModal.addEventListener('click', () => {
      modal.classList.add('hidden');
    });
  
    // Also, you can add an event to close the modal when clicking outside of it
    document.addEventListener('click', (e) => {
      if (e.target === modal) {
        modal.classList.add('hidden');
      }
    });
  </script>


